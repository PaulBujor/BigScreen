@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@inherits LayoutComponentBase
@inject NavigationManager Navigation
@inject SignOutSessionStateManager SignOutManager

<MudThemeProvider/>
<MudDialogProvider/>
<MudSnackbarProvider/>

<MudLayout>
    <MudAppBar Elevation="0">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@DrawerToggle"/>
        <MudSpacer/>
        <AuthorizeView Policy="">
            <Authorized>
                <MudText Typo="Typo.h6">Hello, @context.User.Identity?.Name!</MudText>
                <MudIconButton Icon="@Icons.Material.Filled.Logout" Color="Color.Inherit" OnClick="@BeginLogout"></MudIconButton>
            </Authorized>
            <NotAuthorized>
                <MudIconButton Icon="@Icons.Material.Filled.Login" Color="Color.Inherit" OnClick="@BeginLogin"></MudIconButton>
            </NotAuthorized>
        </AuthorizeView>
    </MudAppBar>
    <MudDrawer @bind-Open="_drawerOpen" Elevation="1">
        <MudDrawerHeader>
            <MudText Typo="Typo.h6">BigScreen</MudText>
        </MudDrawerHeader>
        <NavMenu/>
    </MudDrawer>
    <MudMainContent>
        @Body
    </MudMainContent>
</MudLayout>

@code {
    bool _drawerOpen = true;

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    private async Task BeginLogout()
    {
        await SignOutManager.SetSignOutState();
        Navigation.NavigateTo("authentication/logout");
    }

    private void BeginLogin()
    {
        Navigation.NavigateTo("authentication/login");
    }

}